;#include <mega328p.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;#include <stdio.h>
;
;void main(void) {
; 0000 0006 void main(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0007     // Declare your local variables here
; 0000 0008     char buf[20];
; 0000 0009     char num;
; 0000 000A     // Crystal Oscillator division factor: 1
; 0000 000B     #pragma optsize-
; 0000 000C     CLKPR=(1<<CLKPCE);
;PCODE: $0000000E VOL: 0
;	buf -> Y+0
;	num -> R17
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 000D     CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 000E     #ifdef _OPTIMIZE_SIZE_
; 0000 000F     #pragma optsize+
; 0000 0010     #endif
; 0000 0011 
; 0000 0012     // Input/Output Ports initialization
; 0000 0013     // Port B initialization
; 0000 0014     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0015     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0016     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0017     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0018 
; 0000 0019     // Port C initialization
; 0000 001A     // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 001B     DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 001C     // State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 001D     PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 001E 
; 0000 001F     // Port D initialization
; 0000 0020     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0021     DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0022     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0023     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0024 
; 0000 0025     // USART initialization
; 0000 0026     // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0027     // USART Receiver: On
; 0000 0028     // USART Transmitter: On
; 0000 0029     // USART0 Mode: Asynchronous
; 0000 002A     // USART Baud Rate: 9600
; 0000 002B     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 002C     UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 002D     UCSR0C=(0<<UMSEL01) | (0<<UMSEL00) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 002E     UBRR0H=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 002F     UBRR0L=0x33;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0030 
; 0000 0031     // Alphanumeric LCD initialization
; 0000 0032     // Connections are specified in the
; 0000 0033     // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0034     // RS - PORTB Bit 0
; 0000 0035     // RD - PORTB Bit 1
; 0000 0036     // EN - PORTB Bit 2
; 0000 0037     // D4 - PORTB Bit 4
; 0000 0038     // D5 - PORTB Bit 5
; 0000 0039     // D6 - PORTB Bit 6
; 0000 003A     // D7 - PORTB Bit 7
; 0000 003B     // Characters/line: 20
; 0000 003C     lcd_init(20);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 003D 
; 0000 003E 
; 0000 003F 
; 0000 0040     while (1) {
;PCODE: $0000002B VOL: 0
; 0000 0041         printf("variant:7");
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0042         putchar('\0');
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0043 
; 0000 0044         num = getchar();
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0045 
; 0000 0046         sprintf(buf, "number = %d", num);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0047         lcd_clear();
;PCODE: $00000043 VOL: 0
; 0000 0048         lcd_puts(buf);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0049     	delay_ms(1000);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 004A     }
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 004B }
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
