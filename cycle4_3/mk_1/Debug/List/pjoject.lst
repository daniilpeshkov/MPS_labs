
AVRASM ver. 2.1.30  D:\prg\MPS_labs\cycle4_3\mk_1\Debug\List\pjoject.asm Thu Dec 09 17:50:11 2021

D:\prg\MPS_labs\cycle4_3\mk_1\Debug\List\pjoject.asm(1090): warning: Register r4 already defined by the .DEF directive
D:\prg\MPS_labs\cycle4_3\mk_1\Debug\List\pjoject.asm(1091): warning: Register r3 already defined by the .DEF directive
D:\prg\MPS_labs\cycle4_3\mk_1\Debug\List\pjoject.asm(1092): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R4
                 	.DEF __lcd_y=R3
                 	.DEF __lcd_maxx=R6
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
000034 2710
000035 03e8
000036 0064
000037 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000038 0001      	.DB  0x1,0x0
                 _tbl16_G101:
000039 1000
00003a 0100
00003b 0010
00003c 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00003d 6176
00003e 6972
00003f 6e61
000040 3a74      	.DB  0x76,0x61,0x72,0x69,0x61,0x6E,0x74,0x3A
000041 0037
000042 756e
000043 626d
000044 7265      	.DB  0x37,0x0,0x6E,0x75,0x6D,0x62,0x65,0x72
000045 3d20
000046 2520
000047 0064      	.DB  0x20,0x3D,0x20,0x25,0x64,0x0
                 _0x2000003:
000048 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000049 0002      	.DW  0x02
00004a 0300      	.DW  __base_y_G100
00004b 0090      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
00004c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004d 94f8      	CLI
00004e 27ee      	CLR  R30
00004f bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000050 e0f1      	LDI  R31,1
000051 bff5      	OUT  MCUCR,R31
000052 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000053 e08d      	LDI  R24,(14-2)+1
000054 e0a2      	LDI  R26,2
000055 27bb      	CLR  R27
                 __CLEAR_REG:
000056 93ed      	ST   X+,R30
000057 958a      	DEC  R24
000058 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000059 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005a e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005b e0a0      	LDI  R26,LOW(__SRAM_START)
00005c e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00005d 93ed      	ST   X+,R30
00005e 9701      	SBIW R24,1
00005f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000060 e9e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000061 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000062 9185      	LPM  R24,Z+
000063 9195      	LPM  R25,Z+
000064 9700      	SBIW R24,0
000065 f061      	BREQ __GLOBAL_INI_END
000066 91a5      	LPM  R26,Z+
000067 91b5      	LPM  R27,Z+
000068 9005      	LPM  R0,Z+
000069 9015      	LPM  R1,Z+
00006a 01bf      	MOVW R22,R30
00006b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006c 9005      	LPM  R0,Z+
00006d 920d      	ST   X+,R0
00006e 9701      	SBIW R24,1
00006f f7e1      	BRNE __GLOBAL_INI_LOOP
000070 01fb      	MOVW R30,R22
000071 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
000072 e0e0      	LDI  R30,__GPIOR0_INIT
000073 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000074 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000075 bfed      	OUT  SPL,R30
000076 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000077 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000078 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000079 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007a 940c 007c 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;#include <mega328p.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;
                 ;void main(void) {
                 ; 0000 0006 void main(void) {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0007     // Declare your local variables here
                 ; 0000 0008     char buf[20];
                 ; 0000 0009     char num;
                 ; 0000 000A     // Crystal Oscillator division factor: 1
                 ; 0000 000B     #pragma optsize-
                 ; 0000 000C     CLKPR=(1<<CLKPCE);
00007c 9764      	SBIW R28,20
                 ;	buf -> Y+0
                 ;	num -> R17
00007d e8e0      	LDI  R30,LOW(128)
00007e 93e0 0061 	STS  97,R30
                 ; 0000 000D     CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
000080 e0e0      	LDI  R30,LOW(0)
000081 93e0 0061 	STS  97,R30
                 ; 0000 000E     #ifdef _OPTIMIZE_SIZE_
                 ; 0000 000F     #pragma optsize+
                 ; 0000 0010     #endif
                 ; 0000 0011 
                 ; 0000 0012     // Input/Output Ports initialization
                 ; 0000 0013     // Port B initialization
                 ; 0000 0014     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0015     DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000083 b9e4      	OUT  0x4,R30
                 ; 0000 0016     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0017     PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000084 b9e5      	OUT  0x5,R30
                 ; 0000 0018 
                 ; 0000 0019     // Port C initialization
                 ; 0000 001A     // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 001B     DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000085 b9e7      	OUT  0x7,R30
                 ; 0000 001C     // State: Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 001D     PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000086 b9e8      	OUT  0x8,R30
                 ; 0000 001E 
                 ; 0000 001F     // Port D initialization
                 ; 0000 0020     // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0021     DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000087 b9ea      	OUT  0xA,R30
                 ; 0000 0022     // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0023     PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000088 b9eb      	OUT  0xB,R30
                 ; 0000 0024 
                 ; 0000 0025     // USART initialization
                 ; 0000 0026     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0027     // USART Receiver: On
                 ; 0000 0028     // USART Transmitter: On
                 ; 0000 0029     // USART0 Mode: Asynchronous
                 ; 0000 002A     // USART Baud Rate: 9600
                 ; 0000 002B     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
000089 93e0 00c0 	STS  192,R30
                 ; 0000 002C     UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
00008b e1e8      	LDI  R30,LOW(24)
00008c 93e0 00c1 	STS  193,R30
                 ; 0000 002D     UCSR0C=(0<<UMSEL01) | (0<<UMSEL00) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
00008e e0e6      	LDI  R30,LOW(6)
00008f 93e0 00c2 	STS  194,R30
                 ; 0000 002E     UBRR0H=0x00;
000091 e0e0      	LDI  R30,LOW(0)
000092 93e0 00c5 	STS  197,R30
                 ; 0000 002F     UBRR0L=0x33;
000094 e3e3      	LDI  R30,LOW(51)
000095 93e0 00c4 	STS  196,R30
                 ; 0000 0030 
                 ; 0000 0031     // Alphanumeric LCD initialization
                 ; 0000 0032     // Connections are specified in the
                 ; 0000 0033     // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 0034     // RS - PORTB Bit 0
                 ; 0000 0035     // RD - PORTB Bit 1
                 ; 0000 0036     // EN - PORTB Bit 2
                 ; 0000 0037     // D4 - PORTB Bit 4
                 ; 0000 0038     // D5 - PORTB Bit 5
                 ; 0000 0039     // D6 - PORTB Bit 6
                 ; 0000 003A     // D7 - PORTB Bit 7
                 ; 0000 003B     // Characters/line: 20
                 ; 0000 003C     lcd_init(20);
000097 e1a4      	LDI  R26,LOW(20)
000098 d086      	RCALL _lcd_init
                 ; 0000 003D 
                 ; 0000 003E 
                 ; 0000 003F 
                 ; 0000 0040     while (1) {
                 _0x3:
                 ; 0000 0041         printf("variant:7");
                +
000099 e7ea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00009a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00009b 93fa      	ST   -Y,R31
00009c 93ea      	ST   -Y,R30
00009d e080      	LDI  R24,0
00009e 940e 0303 	CALL _printf
0000a0 9622      	ADIW R28,2
                 ; 0000 0042         putchar('\0');
0000a1 e0a0      	LDI  R26,LOW(0)
0000a2 940e 0153 	CALL _putchar
                 ; 0000 0043 
                 ; 0000 0044         num = getchar();
0000a4 940e 014c 	CALL _getchar
0000a6 2f1e      	MOV  R17,R30
                 ; 0000 0045 
                 ; 0000 0046         sprintf(buf, "number = %d", num);
0000a7 01fe      	MOVW R30,R28
0000a8 93fa      	ST   -Y,R31
0000a9 93ea      	ST   -Y,R30
                +
0000aa e8e4     +LDI R30 , LOW ( 2 * _0x0 + ( 10 ) )
0000ab e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW1FN _0x0,10
0000ac 93fa      	ST   -Y,R31
0000ad 93ea      	ST   -Y,R30
0000ae 2fe1      	MOV  R30,R17
0000af 27ff      	CLR  R31
0000b0 2766      	CLR  R22
0000b1 2777      	CLR  R23
0000b2 940e 039e 	CALL __PUTPARD1
0000b4 e084      	LDI  R24,4
0000b5 940e 02d5 	CALL _sprintf
0000b7 9628      	ADIW R28,8
                 ; 0000 0047         lcd_clear();
0000b8 d035      	RCALL _lcd_clear
                 ; 0000 0048         lcd_puts(buf);
0000b9 01de      	MOVW R26,R28
0000ba d054      	RCALL _lcd_puts
                 ; 0000 0049     	delay_ms(1000);
0000bb eea8      	LDI  R26,LOW(1000)
0000bc e0b3      	LDI  R27,HIGH(1000)
0000bd 940e 0384 	CALL _delay_ms
                 ; 0000 004A     }
0000bf cfd9      	RJMP _0x3
                 ; 0000 004B }
                 _0x6:
0000c0 cfff      	RJMP _0x6
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000c1 93aa      	ST   -Y,R26
0000c2 b1e5      	IN   R30,0x5
0000c3 70ef      	ANDI R30,LOW(0xF)
0000c4 2fae      	MOV  R26,R30
0000c5 81e8      	LD   R30,Y
0000c6 7fe0      	ANDI R30,LOW(0xF0)
0000c7 2bea      	OR   R30,R26
0000c8 b9e5      	OUT  0x5,R30
                +
0000c9 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000ca 958a     +DEC R24
0000cb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000cc 9a2a      	SBI  0x5,2
                +
0000cd e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000ce 958a     +DEC R24
0000cf f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000d0 982a      	CBI  0x5,2
                +
0000d1 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000d2 958a     +DEC R24
0000d3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000d4 c086      	RJMP _0x2080003
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000d5 93aa      	ST   -Y,R26
0000d6 81a8      	LD   R26,Y
0000d7 dfe9      	RCALL __lcd_write_nibble_G100
0000d8 81e8          ld    r30,y
0000d9 95e2          swap  r30
0000da 83e8          st    y,r30
0000db 81a8      	LD   R26,Y
0000dc dfe4      	RCALL __lcd_write_nibble_G100
                +
0000dd e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0000de 958a     +DEC R24
0000df f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0000e0 c07a      	RJMP _0x2080003
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000e1 93aa      	ST   -Y,R26
0000e2 81e8      	LD   R30,Y
0000e3 e0f0      	LDI  R31,0
0000e4 50e0      	SUBI R30,LOW(-__base_y_G100)
0000e5 4ffd      	SBCI R31,HIGH(-__base_y_G100)
0000e6 81e0      	LD   R30,Z
0000e7 81a9      	LDD  R26,Y+1
0000e8 0fae      	ADD  R26,R30
0000e9 dfeb      	RCALL __lcd_write_data
0000ea 8049      	LDD  R4,Y+1
0000eb 8038      	LDD  R3,Y+0
0000ec 9622      	ADIW R28,2
0000ed 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000ee e0a2      	LDI  R26,LOW(2)
0000ef 940e 033b 	CALL SUBOPT_0x0
0000f1 e0ac      	LDI  R26,LOW(12)
0000f2 dfe2      	RCALL __lcd_write_data
0000f3 e0a1      	LDI  R26,LOW(1)
0000f4 940e 033b 	CALL SUBOPT_0x0
0000f6 e0e0      	LDI  R30,LOW(0)
0000f7 2e3e      	MOV  R3,R30
0000f8 2e4e      	MOV  R4,R30
0000f9 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0000fa 93aa      	ST   -Y,R26
0000fb 81a8      	LD   R26,Y
0000fc 30aa      	CPI  R26,LOW(0xA)
0000fd f011      	BREQ _0x2000005
0000fe 1446      	CP   R4,R6
0000ff f048      	BRLO _0x2000004
                 _0x2000005:
000100 e0e0      	LDI  R30,LOW(0)
000101 93ea      	ST   -Y,R30
000102 9433      	INC  R3
000103 2da3      	MOV  R26,R3
000104 dfdc      	RCALL _lcd_gotoxy
000105 81a8      	LD   R26,Y
000106 30aa      	CPI  R26,LOW(0xA)
000107 f409      	BRNE _0x2000007
000108 c052      	RJMP _0x2080003
                 _0x2000007:
                 _0x2000004:
000109 9443      	INC  R4
00010a 9a28      	SBI  0x5,0
00010b 81a8      	LD   R26,Y
00010c dfc8      	RCALL __lcd_write_data
00010d 9828      	CBI  0x5,0
00010e c04c      	RJMP _0x2080003
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00010f 93ba      	ST   -Y,R27
000110 93aa      	ST   -Y,R26
000111 931a      	ST   -Y,R17
                 _0x2000008:
000112 81a9      	LDD  R26,Y+1
000113 81ba      	LDD  R27,Y+1+1
000114 91ed      	LD   R30,X+
000115 83a9      	STD  Y+1,R26
000116 83ba      	STD  Y+1+1,R27
000117 2f1e      	MOV  R17,R30
000118 30e0      	CPI  R30,0
000119 f019      	BREQ _0x200000A
00011a 2fa1      	MOV  R26,R17
00011b dfde      	RCALL _lcd_putchar
00011c cff5      	RJMP _0x2000008
                 _0x200000A:
00011d 8118      	LDD  R17,Y+0
00011e c046      	RJMP _0x2080002
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00011f 93aa      	ST   -Y,R26
000120 b1e4      	IN   R30,0x4
000121 6fe0      	ORI  R30,LOW(0xF0)
000122 b9e4      	OUT  0x4,R30
000123 9a22      	SBI  0x4,2
000124 9a20      	SBI  0x4,0
000125 9a21      	SBI  0x4,1
000126 982a      	CBI  0x5,2
000127 9828      	CBI  0x5,0
000128 9829      	CBI  0x5,1
000129 8068      	LDD  R6,Y+0
00012a 81e8      	LD   R30,Y
00012b 58e0      	SUBI R30,-LOW(128)
                +
00012c 93e0 0302+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00012e 81e8      	LD   R30,Y
00012f 54e0      	SUBI R30,-LOW(192)
                +
000130 93e0 0303+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000132 e1a4      	LDI  R26,LOW(20)
000133 e0b0      	LDI  R27,0
000134 940e 0384 	CALL _delay_ms
000136 940e 0341 	CALL SUBOPT_0x1
000138 940e 0341 	CALL SUBOPT_0x1
00013a 940e 0341 	CALL SUBOPT_0x1
00013c e2a0      	LDI  R26,LOW(32)
00013d df83      	RCALL __lcd_write_nibble_G100
                +
00013e ec88     +LDI R24 , LOW ( 200 )
00013f e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000140 9701     +SBIW R24 , 1
000141 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000142 e2a8      	LDI  R26,LOW(40)
000143 df91      	RCALL __lcd_write_data
000144 e0a4      	LDI  R26,LOW(4)
000145 df8f      	RCALL __lcd_write_data
000146 e8a5      	LDI  R26,LOW(133)
000147 df8d      	RCALL __lcd_write_data
000148 e0a6      	LDI  R26,LOW(6)
000149 df8b      	RCALL __lcd_write_data
00014a dfa3      	RCALL _lcd_clear
00014b c00f      	RJMP _0x2080003
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 _0x2020003:
00014c 91e0 00c0 	LDS  R30,192
00014e 78e0      	ANDI R30,LOW(0x80)
00014f f3e1      	BREQ _0x2020003
000150 91e0 00c6 	LDS  R30,198
000152 9508      	RET
                 ; .FEND
                 _putchar:
                 ; .FSTART _putchar
000153 93aa      	ST   -Y,R26
                 _0x2020006:
000154 91e0 00c0 	LDS  R30,192
000156 72e0      	ANDI R30,LOW(0x20)
000157 f3e1      	BREQ _0x2020006
000158 81e8      	LD   R30,Y
000159 93e0 00c6 	STS  198,R30
                 _0x2080003:
00015b 9621      	ADIW R28,1
00015c 9508      	RET
                 ; .FEND
                 _put_usart_G101:
                 ; .FSTART _put_usart_G101
00015d 93ba      	ST   -Y,R27
00015e 93aa      	ST   -Y,R26
00015f 81aa      	LDD  R26,Y+2
000160 dff2      	RCALL _putchar
000161 81a8      	LD   R26,Y
000162 81b9      	LDD  R27,Y+1
000163 940e 0349 	CALL SUBOPT_0x2
                 _0x2080002:
000165 9623      	ADIW R28,3
000166 9508      	RET
                 ; .FEND
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000167 93ba      	ST   -Y,R27
000168 93aa      	ST   -Y,R26
000169 931a      	ST   -Y,R17
00016a 930a      	ST   -Y,R16
00016b 81aa      	LDD  R26,Y+2
00016c 81bb      	LDD  R27,Y+2+1
00016d 9612      	ADIW R26,2
00016e 940e 0396 	CALL __GETW1P
000170 9730      	SBIW R30,0
000171 f129      	BREQ _0x2020016
000172 81aa      	LDD  R26,Y+2
000173 81bb      	LDD  R27,Y+2+1
000174 9614      	ADIW R26,4
000175 940e 0396 	CALL __GETW1P
000177 018f      	MOVW R16,R30
000178 9730      	SBIW R30,0
000179 f061      	BREQ _0x2020018
                +
00017a 3002     +CPI R16 , LOW ( 2 )
00017b e0e0     +LDI R30 , HIGH ( 2 )
00017c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00017d f080      	BRLO _0x2020019
00017e 01f8      	MOVW R30,R16
00017f 9731      	SBIW R30,1
000180 018f      	MOVW R16,R30
                +
000181 81aa     +LDD R26 , Y + 2
000182 81bb     +LDD R27 , Y + 2 + 1
000183 9614     +ADIW R26 , 4
000184 93ed     +ST X + , R30
000185 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020018:
000186 81aa      	LDD  R26,Y+2
000187 81bb      	LDD  R27,Y+2+1
000188 9612      	ADIW R26,2
000189 940e 0349 	CALL SUBOPT_0x2
00018b 9731      	SBIW R30,1
00018c 81ac      	LDD  R26,Y+4
00018d 83a0      	STD  Z+0,R26
                 _0x2020019:
00018e 81aa      	LDD  R26,Y+2
00018f 81bb      	LDD  R27,Y+2+1
000190 940e 0396 	CALL __GETW1P
000192 23ff      	TST  R31
000193 f012      	BRMI _0x202001A
000194 940e 0349 	CALL SUBOPT_0x2
                 _0x202001A:
000196 c006      	RJMP _0x202001B
                 _0x2020016:
000197 81aa      	LDD  R26,Y+2
000198 81bb      	LDD  R27,Y+2+1
000199 efef      	LDI  R30,LOW(65535)
00019a efff      	LDI  R31,HIGH(65535)
00019b 93ed      	ST   X+,R30
00019c 93fc      	ST   X,R31
                 _0x202001B:
00019d 8119      	LDD  R17,Y+1
00019e 8108      	LDD  R16,Y+0
00019f 9625      	ADIW R28,5
0001a0 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0001a1 93ba      	ST   -Y,R27
0001a2 93aa      	ST   -Y,R26
0001a3 9726      	SBIW R28,6
0001a4 940e 03a3 	CALL __SAVELOCR6
0001a6 e010      	LDI  R17,0
0001a7 85ac      	LDD  R26,Y+12
0001a8 85bd      	LDD  R27,Y+12+1
0001a9 e0e0      	LDI  R30,LOW(0)
0001aa e0f0      	LDI  R31,HIGH(0)
0001ab 93ed      	ST   X+,R30
0001ac 93fc      	ST   X,R31
                 _0x202001C:
0001ad 89ea      	LDD  R30,Y+18
0001ae 89fb      	LDD  R31,Y+18+1
0001af 9631      	ADIW R30,1
0001b0 8bea      	STD  Y+18,R30
0001b1 8bfb      	STD  Y+18+1,R31
0001b2 9731      	SBIW R30,1
0001b3 91e4      	LPM  R30,Z
0001b4 2f2e      	MOV  R18,R30
0001b5 30e0      	CPI  R30,0
0001b6 f409      	BRNE PC+2
0001b7 c115      	RJMP _0x202001E
0001b8 2fe1      	MOV  R30,R17
0001b9 30e0      	CPI  R30,0
0001ba f439      	BRNE _0x2020022
0001bb 3225      	CPI  R18,37
0001bc f411      	BRNE _0x2020023
0001bd e011      	LDI  R17,LOW(1)
0001be c002      	RJMP _0x2020024
                 _0x2020023:
0001bf 940e 034f 	CALL SUBOPT_0x3
                 _0x2020024:
0001c1 c10a      	RJMP _0x2020021
                 _0x2020022:
0001c2 30e1      	CPI  R30,LOW(0x1)
0001c3 f4a9      	BRNE _0x2020025
0001c4 3225      	CPI  R18,37
0001c5 f419      	BRNE _0x2020026
0001c6 940e 034f 	CALL SUBOPT_0x3
0001c8 c102      	RJMP _0x20200D2
                 _0x2020026:
0001c9 e012      	LDI  R17,LOW(2)
0001ca e040      	LDI  R20,LOW(0)
0001cb e000      	LDI  R16,LOW(0)
0001cc 322d      	CPI  R18,45
0001cd f411      	BRNE _0x2020027
0001ce e001      	LDI  R16,LOW(1)
0001cf c0fc      	RJMP _0x2020021
                 _0x2020027:
0001d0 322b      	CPI  R18,43
0001d1 f411      	BRNE _0x2020028
0001d2 e24b      	LDI  R20,LOW(43)
0001d3 c0f8      	RJMP _0x2020021
                 _0x2020028:
0001d4 3220      	CPI  R18,32
0001d5 f411      	BRNE _0x2020029
0001d6 e240      	LDI  R20,LOW(32)
0001d7 c0f4      	RJMP _0x2020021
                 _0x2020029:
0001d8 c002      	RJMP _0x202002A
                 _0x2020025:
0001d9 30e2      	CPI  R30,LOW(0x2)
0001da f439      	BRNE _0x202002B
                 _0x202002A:
0001db e050      	LDI  R21,LOW(0)
0001dc e013      	LDI  R17,LOW(3)
0001dd 3320      	CPI  R18,48
0001de f411      	BRNE _0x202002C
0001df 6800      	ORI  R16,LOW(128)
0001e0 c0eb      	RJMP _0x2020021
                 _0x202002C:
0001e1 c003      	RJMP _0x202002D
                 _0x202002B:
0001e2 30e3      	CPI  R30,LOW(0x3)
0001e3 f009      	BREQ PC+2
0001e4 c0e7      	RJMP _0x2020021
                 _0x202002D:
0001e5 3320      	CPI  R18,48
0001e6 f010      	BRLO _0x2020030
0001e7 332a      	CPI  R18,58
0001e8 f008      	BRLO _0x2020031
                 _0x2020030:
0001e9 c007      	RJMP _0x202002F
                 _0x2020031:
0001ea e0aa      	LDI  R26,LOW(10)
0001eb 9f5a      	MUL  R21,R26
0001ec 2d50      	MOV  R21,R0
0001ed 2fe2      	MOV  R30,R18
0001ee 53e0      	SUBI R30,LOW(48)
0001ef 0f5e      	ADD  R21,R30
0001f0 c0db      	RJMP _0x2020021
                 _0x202002F:
0001f1 2fe2      	MOV  R30,R18
0001f2 36e3      	CPI  R30,LOW(0x63)
0001f3 f449      	BRNE _0x2020035
0001f4 940e 0356 	CALL SUBOPT_0x4
0001f6 89e8      	LDD  R30,Y+16
0001f7 89f9      	LDD  R31,Y+16+1
0001f8 81a4      	LDD  R26,Z+4
0001f9 93aa      	ST   -Y,R26
0001fa 940e 035c 	CALL SUBOPT_0x5
0001fc c0ce      	RJMP _0x2020036
                 _0x2020035:
0001fd 37e3      	CPI  R30,LOW(0x73)
0001fe f441      	BRNE _0x2020038
0001ff 940e 0356 	CALL SUBOPT_0x4
000201 940e 0362 	CALL SUBOPT_0x6
000203 940e 0322 	CALL _strlen
000205 2f1e      	MOV  R17,R30
000206 c00a      	RJMP _0x2020039
                 _0x2020038:
000207 37e0      	CPI  R30,LOW(0x70)
000208 f461      	BRNE _0x202003B
000209 940e 0356 	CALL SUBOPT_0x4
00020b 940e 0362 	CALL SUBOPT_0x6
00020d 940e 032e 	CALL _strlenf
00020f 2f1e      	MOV  R17,R30
000210 6008      	ORI  R16,LOW(8)
                 _0x2020039:
000211 6002      	ORI  R16,LOW(2)
000212 770f      	ANDI R16,LOW(127)
000213 e030      	LDI  R19,LOW(0)
000214 c034      	RJMP _0x202003C
                 _0x202003B:
000215 36e4      	CPI  R30,LOW(0x64)
000216 f011      	BREQ _0x202003F
000217 36e9      	CPI  R30,LOW(0x69)
000218 f411      	BRNE _0x2020040
                 _0x202003F:
000219 6004      	ORI  R16,LOW(4)
00021a c002      	RJMP _0x2020041
                 _0x2020040:
00021b 37e5      	CPI  R30,LOW(0x75)
00021c f431      	BRNE _0x2020042
                 _0x2020041:
00021d e6e8      	LDI  R30,LOW(_tbl10_G101*2)
00021e e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
00021f 83ee      	STD  Y+6,R30
000220 83ff      	STD  Y+6+1,R31
000221 e015      	LDI  R17,LOW(5)
000222 c00c      	RJMP _0x2020043
                 _0x2020042:
000223 35e8      	CPI  R30,LOW(0x58)
000224 f411      	BRNE _0x2020045
000225 6008      	ORI  R16,LOW(8)
000226 c003      	RJMP _0x2020046
                 _0x2020045:
000227 37e8      	CPI  R30,LOW(0x78)
000228 f009      	BREQ PC+2
000229 c0a1      	RJMP _0x2020077
                 _0x2020046:
00022a e7e2      	LDI  R30,LOW(_tbl16_G101*2)
00022b e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
00022c 83ee      	STD  Y+6,R30
00022d 83ff      	STD  Y+6+1,R31
00022e e014      	LDI  R17,LOW(4)
                 _0x2020043:
00022f ff02      	SBRS R16,2
000230 c014      	RJMP _0x2020048
000231 940e 0356 	CALL SUBOPT_0x4
000233 940e 036c 	CALL SUBOPT_0x7
000235 85ab      	LDD  R26,Y+11
000236 23aa      	TST  R26
000237 f43a      	BRPL _0x2020049
000238 85ea      	LDD  R30,Y+10
000239 85fb      	LDD  R31,Y+10+1
00023a 940e 0392 	CALL __ANEGW1
00023c 87ea      	STD  Y+10,R30
00023d 87fb      	STD  Y+10+1,R31
00023e e24d      	LDI  R20,LOW(45)
                 _0x2020049:
00023f 3040      	CPI  R20,0
000240 f011      	BREQ _0x202004A
000241 5f1f      	SUBI R17,-LOW(1)
000242 c001      	RJMP _0x202004B
                 _0x202004A:
000243 7f0b      	ANDI R16,LOW(251)
                 _0x202004B:
000244 c004      	RJMP _0x202004C
                 _0x2020048:
000245 940e 0356 	CALL SUBOPT_0x4
000247 940e 036c 	CALL SUBOPT_0x7
                 _0x202004C:
                 _0x202003C:
000249 fd00      	SBRC R16,0
00024a c011      	RJMP _0x202004D
                 _0x202004E:
00024b 1715      	CP   R17,R21
00024c f478      	BRSH _0x2020050
00024d ff07      	SBRS R16,7
00024e c008      	RJMP _0x2020051
00024f ff02      	SBRS R16,2
000250 c004      	RJMP _0x2020052
000251 7f0b      	ANDI R16,LOW(251)
000252 2f24      	MOV  R18,R20
000253 5011      	SUBI R17,LOW(1)
000254 c001      	RJMP _0x2020053
                 _0x2020052:
000255 e320      	LDI  R18,LOW(48)
                 _0x2020053:
000256 c001      	RJMP _0x2020054
                 _0x2020051:
000257 e220      	LDI  R18,LOW(32)
                 _0x2020054:
000258 940e 034f 	CALL SUBOPT_0x3
00025a 5051      	SUBI R21,LOW(1)
00025b cfef      	RJMP _0x202004E
                 _0x2020050:
                 _0x202004D:
00025c 2f31      	MOV  R19,R17
00025d ff01      	SBRS R16,1
00025e c017      	RJMP _0x2020055
                 _0x2020056:
00025f 3030      	CPI  R19,0
000260 f0a1      	BREQ _0x2020058
000261 ff03      	SBRS R16,3
000262 c006      	RJMP _0x2020059
000263 81ee      	LDD  R30,Y+6
000264 81ff      	LDD  R31,Y+6+1
000265 9125      	LPM  R18,Z+
000266 83ee      	STD  Y+6,R30
000267 83ff      	STD  Y+6+1,R31
000268 c005      	RJMP _0x202005A
                 _0x2020059:
000269 81ae      	LDD  R26,Y+6
00026a 81bf      	LDD  R27,Y+6+1
00026b 912d      	LD   R18,X+
00026c 83ae      	STD  Y+6,R26
00026d 83bf      	STD  Y+6+1,R27
                 _0x202005A:
00026e 940e 034f 	CALL SUBOPT_0x3
000270 3050      	CPI  R21,0
000271 f009      	BREQ _0x202005B
000272 5051      	SUBI R21,LOW(1)
                 _0x202005B:
000273 5031      	SUBI R19,LOW(1)
000274 cfea      	RJMP _0x2020056
                 _0x2020058:
000275 c04b      	RJMP _0x202005C
                 _0x2020055:
                 _0x202005E:
000276 e320      	LDI  R18,LOW(48)
000277 81ee      	LDD  R30,Y+6
000278 81ff      	LDD  R31,Y+6+1
000279 940e 039a 	CALL __GETW1PF
00027b 87e8      	STD  Y+8,R30
00027c 87f9      	STD  Y+8+1,R31
00027d 81ee      	LDD  R30,Y+6
00027e 81ff      	LDD  R31,Y+6+1
00027f 9632      	ADIW R30,2
000280 83ee      	STD  Y+6,R30
000281 83ff      	STD  Y+6+1,R31
                 _0x2020060:
000282 85e8      	LDD  R30,Y+8
000283 85f9      	LDD  R31,Y+8+1
000284 85aa      	LDD  R26,Y+10
000285 85bb      	LDD  R27,Y+10+1
000286 17ae      	CP   R26,R30
000287 07bf      	CPC  R27,R31
000288 f050      	BRLO _0x2020062
000289 5f2f      	SUBI R18,-LOW(1)
00028a 85a8      	LDD  R26,Y+8
00028b 85b9      	LDD  R27,Y+8+1
00028c 85ea      	LDD  R30,Y+10
00028d 85fb      	LDD  R31,Y+10+1
00028e 1bea      	SUB  R30,R26
00028f 0bfb      	SBC  R31,R27
000290 87ea      	STD  Y+10,R30
000291 87fb      	STD  Y+10+1,R31
000292 cfef      	RJMP _0x2020060
                 _0x2020062:
000293 332a      	CPI  R18,58
000294 f028      	BRLO _0x2020063
000295 ff03      	SBRS R16,3
000296 c002      	RJMP _0x2020064
000297 5f29      	SUBI R18,-LOW(7)
000298 c001      	RJMP _0x2020065
                 _0x2020064:
000299 5d29      	SUBI R18,-LOW(39)
                 _0x2020065:
                 _0x2020063:
00029a fd04      	SBRC R16,4
00029b c01a      	RJMP _0x2020067
00029c 3321      	CPI  R18,49
00029d f420      	BRSH _0x2020069
00029e 85a8      	LDD  R26,Y+8
00029f 85b9      	LDD  R27,Y+8+1
0002a0 9711      	SBIW R26,1
0002a1 f409      	BRNE _0x2020068
                 _0x2020069:
0002a2 c009      	RJMP _0x20200D3
                 _0x2020068:
0002a3 1753      	CP   R21,R19
0002a4 f010      	BRLO _0x202006D
0002a5 ff00      	SBRS R16,0
0002a6 c001      	RJMP _0x202006E
                 _0x202006D:
0002a7 c013      	RJMP _0x202006C
                 _0x202006E:
0002a8 e220      	LDI  R18,LOW(32)
0002a9 ff07      	SBRS R16,7
0002aa c00b      	RJMP _0x202006F
0002ab e320      	LDI  R18,LOW(48)
                 _0x20200D3:
0002ac 6100      	ORI  R16,LOW(16)
0002ad ff02      	SBRS R16,2
0002ae c007      	RJMP _0x2020070
0002af 7f0b      	ANDI R16,LOW(251)
0002b0 934a      	ST   -Y,R20
0002b1 940e 035c 	CALL SUBOPT_0x5
0002b3 3050      	CPI  R21,0
0002b4 f009      	BREQ _0x2020071
0002b5 5051      	SUBI R21,LOW(1)
                 _0x2020071:
                 _0x2020070:
                 _0x202006F:
                 _0x2020067:
0002b6 940e 034f 	CALL SUBOPT_0x3
0002b8 3050      	CPI  R21,0
0002b9 f009      	BREQ _0x2020072
0002ba 5051      	SUBI R21,LOW(1)
                 _0x2020072:
                 _0x202006C:
0002bb 5031      	SUBI R19,LOW(1)
0002bc 85a8      	LDD  R26,Y+8
0002bd 85b9      	LDD  R27,Y+8+1
0002be 9712      	SBIW R26,2
0002bf f008      	BRLO _0x202005F
0002c0 cfb5      	RJMP _0x202005E
                 _0x202005F:
                 _0x202005C:
0002c1 ff00      	SBRS R16,0
0002c2 c008      	RJMP _0x2020073
                 _0x2020074:
0002c3 3050      	CPI  R21,0
0002c4 f031      	BREQ _0x2020076
0002c5 5051      	SUBI R21,LOW(1)
0002c6 e2e0      	LDI  R30,LOW(32)
0002c7 93ea      	ST   -Y,R30
0002c8 940e 035c 	CALL SUBOPT_0x5
0002ca cff8      	RJMP _0x2020074
                 _0x2020076:
                 _0x2020073:
                 _0x2020077:
                 _0x2020036:
                 _0x20200D2:
0002cb e010      	LDI  R17,LOW(0)
                 _0x2020021:
0002cc cee0      	RJMP _0x202001C
                 _0x202001E:
0002cd 85ac      	LDD  R26,Y+12
0002ce 85bd      	LDD  R27,Y+12+1
0002cf 940e 0396 	CALL __GETW1P
0002d1 940e 03aa 	CALL __LOADLOCR6
0002d3 9664      	ADIW R28,20
0002d4 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0002d5 92ff      	PUSH R15
0002d6 2ef8      	MOV  R15,R24
0002d7 9726      	SBIW R28,6
0002d8 940e 03a5 	CALL __SAVELOCR4
0002da 940e 0374 	CALL SUBOPT_0x8
0002dc 9730      	SBIW R30,0
0002dd f419      	BRNE _0x2020078
0002de efef      	LDI  R30,LOW(65535)
0002df efff      	LDI  R31,HIGH(65535)
0002e0 c01d      	RJMP _0x2080001
                 _0x2020078:
0002e1 01de      	MOVW R26,R28
0002e2 9616      	ADIW R26,6
0002e3 940e 038e 	CALL __ADDW2R15
0002e5 018d      	MOVW R16,R26
0002e6 940e 0374 	CALL SUBOPT_0x8
0002e8 83ee      	STD  Y+6,R30
0002e9 83ff      	STD  Y+6+1,R31
0002ea e0e0      	LDI  R30,LOW(0)
0002eb 87e8      	STD  Y+8,R30
0002ec 87e9      	STD  Y+8+1,R30
0002ed 01de      	MOVW R26,R28
0002ee 961a      	ADIW R26,10
0002ef 940e 037b 	CALL SUBOPT_0x9
0002f1 e6e7      	LDI  R30,LOW(_put_buff_G101)
0002f2 e0f1      	LDI  R31,HIGH(_put_buff_G101)
0002f3 93fa      	ST   -Y,R31
0002f4 93ea      	ST   -Y,R30
0002f5 01de      	MOVW R26,R28
0002f6 961a      	ADIW R26,10
0002f7 dea9      	RCALL __print_G101
0002f8 019f      	MOVW R18,R30
0002f9 81ae      	LDD  R26,Y+6
0002fa 81bf      	LDD  R27,Y+6+1
0002fb e0e0      	LDI  R30,LOW(0)
0002fc 93ec      	ST   X,R30
0002fd 01f9      	MOVW R30,R18
                 _0x2080001:
0002fe 940e 03ac 	CALL __LOADLOCR4
000300 962a      	ADIW R28,10
000301 90ff      	POP  R15
000302 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
000303 92ff      	PUSH R15
000304 2ef8      	MOV  R15,R24
000305 9726      	SBIW R28,6
000306 931a      	ST   -Y,R17
000307 930a      	ST   -Y,R16
000308 01de      	MOVW R26,R28
000309 9614      	ADIW R26,4
00030a 940e 038e 	CALL __ADDW2R15
00030c 018d      	MOVW R16,R26
00030d e0e0      	LDI  R30,LOW(0)
00030e 83ec      	STD  Y+4,R30
00030f 83ed      	STD  Y+4+1,R30
000310 83ee      	STD  Y+6,R30
000311 83ef      	STD  Y+6+1,R30
000312 01de      	MOVW R26,R28
000313 9618      	ADIW R26,8
000314 940e 037b 	CALL SUBOPT_0x9
000316 e5ed      	LDI  R30,LOW(_put_usart_G101)
000317 e0f1      	LDI  R31,HIGH(_put_usart_G101)
000318 93fa      	ST   -Y,R31
000319 93ea      	ST   -Y,R30
00031a 01de      	MOVW R26,R28
00031b 9618      	ADIW R26,8
00031c de84      	RCALL __print_G101
00031d 8119      	LDD  R17,Y+1
00031e 8108      	LDD  R16,Y+0
00031f 9628      	ADIW R28,8
000320 90ff      	POP  R15
000321 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000322 93ba      	ST   -Y,R27
000323 93aa      	ST   -Y,R26
000324 91a9          ld   r26,y+
000325 91b9          ld   r27,y+
000326 27ee          clr  r30
000327 27ff          clr  r31
                 strlen0:
000328 916d          ld   r22,x+
000329 2366          tst  r22
00032a f011          breq strlen1
00032b 9631          adiw r30,1
00032c cffb          rjmp strlen0
                 strlen1:
00032d 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00032e 93ba      	ST   -Y,R27
00032f 93aa      	ST   -Y,R26
000330 27aa          clr  r26
000331 27bb          clr  r27
000332 91e9          ld   r30,y+
000333 91f9          ld   r31,y+
                 strlenf0:
000334 9005      	lpm  r0,z+
000335 2000          tst  r0
000336 f011          breq strlenf1
000337 9611          adiw r26,1
000338 cffb          rjmp strlenf0
                 strlenf1:
000339 01fd          movw r30,r26
00033a 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G100:
000300           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00033b 940e 00d5 	CALL __lcd_write_data
00033d e0a3      	LDI  R26,LOW(3)
00033e e0b0      	LDI  R27,0
00033f 940c 0384 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
000341 e3a0      	LDI  R26,LOW(48)
000342 940e 00c1 	CALL __lcd_write_nibble_G100
                +
000344 ec88     +LDI R24 , LOW ( 200 )
000345 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000346 9701     +SBIW R24 , 1
000347 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000348 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000349 91ed      	LD   R30,X+
00034a 91fd      	LD   R31,X+
00034b 9631      	ADIW R30,1
00034c 93fe      	ST   -X,R31
00034d 93ee      	ST   -X,R30
00034e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3:
00034f 932a      	ST   -Y,R18
000350 85ad      	LDD  R26,Y+13
000351 85be      	LDD  R27,Y+13+1
000352 85ef      	LDD  R30,Y+15
000353 89f8      	LDD  R31,Y+15+1
000354 9509      	ICALL
000355 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
000356 89e8      	LDD  R30,Y+16
000357 89f9      	LDD  R31,Y+16+1
000358 9734      	SBIW R30,4
000359 8be8      	STD  Y+16,R30
00035a 8bf9      	STD  Y+16+1,R31
00035b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
00035c 85ad      	LDD  R26,Y+13
00035d 85be      	LDD  R27,Y+13+1
00035e 85ef      	LDD  R30,Y+15
00035f 89f8      	LDD  R31,Y+15+1
000360 9509      	ICALL
000361 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6:
000362 89a8      	LDD  R26,Y+16
000363 89b9      	LDD  R27,Y+16+1
000364 9614      	ADIW R26,4
000365 940e 0396 	CALL __GETW1P
000367 83ee      	STD  Y+6,R30
000368 83ff      	STD  Y+6+1,R31
000369 81ae      	LDD  R26,Y+6
00036a 81bf      	LDD  R27,Y+6+1
00036b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
00036c 89a8      	LDD  R26,Y+16
00036d 89b9      	LDD  R27,Y+16+1
00036e 9614      	ADIW R26,4
00036f 940e 0396 	CALL __GETW1P
000371 87ea      	STD  Y+10,R30
000372 87fb      	STD  Y+10+1,R31
000373 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
000374 01de      	MOVW R26,R28
000375 961c      	ADIW R26,12
000376 940e 038e 	CALL __ADDW2R15
000378 940e 0396 	CALL __GETW1P
00037a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9:
00037b 940e 038e 	CALL __ADDW2R15
00037d 940e 0396 	CALL __GETW1P
00037f 93fa      	ST   -Y,R31
000380 93ea      	ST   -Y,R30
000381 931a      	ST   -Y,R17
000382 930a      	ST   -Y,R16
000383 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000384 9610      	adiw r26,0
000385 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000386 ed80     +LDI R24 , LOW ( 0x7D0 )
000387 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000388 9701     +SBIW R24 , 1
000389 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00038a 95a8      	wdr
00038b 9711      	sbiw r26,1
00038c f7c9      	brne __delay_ms0
                 __delay_ms1:
00038d 9508      	ret
                 
                 __ADDW2R15:
00038e 2400      	CLR  R0
00038f 0daf      	ADD  R26,R15
000390 1db0      	ADC  R27,R0
000391 9508      	RET
                 
                 __ANEGW1:
000392 95f1      	NEG  R31
000393 95e1      	NEG  R30
000394 40f0      	SBCI R31,0
000395 9508      	RET
                 
                 __GETW1P:
000396 91ed      	LD   R30,X+
000397 91fc      	LD   R31,X
000398 9711      	SBIW R26,1
000399 9508      	RET
                 
                 __GETW1PF:
00039a 9005      	LPM  R0,Z+
00039b 91f4      	LPM  R31,Z
00039c 2de0      	MOV  R30,R0
00039d 9508      	RET
                 
                 __PUTPARD1:
00039e 937a      	ST   -Y,R23
00039f 936a      	ST   -Y,R22
0003a0 93fa      	ST   -Y,R31
0003a1 93ea      	ST   -Y,R30
0003a2 9508      	RET
                 
                 __SAVELOCR6:
0003a3 935a      	ST   -Y,R21
                 __SAVELOCR5:
0003a4 934a      	ST   -Y,R20
                 __SAVELOCR4:
0003a5 933a      	ST   -Y,R19
                 __SAVELOCR3:
0003a6 932a      	ST   -Y,R18
                 __SAVELOCR2:
0003a7 931a      	ST   -Y,R17
0003a8 930a      	ST   -Y,R16
0003a9 9508      	RET
                 
                 __LOADLOCR6:
0003aa 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0003ab 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0003ac 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0003ad 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0003ae 8119      	LDD  R17,Y+1
0003af 8108      	LD   R16,Y
0003b0 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  11 r1 :   1 r2 :   0 r3 :   4 r4 :   4 r5 :   0 r6 :   2 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  37 r17:  28 r18:  29 r19:   8 r20:   9 r21:  17 r22:   6 r23:   2 
r24:  25 r25:   5 r26: 109 r27:  40 r28:  23 r29:   1 r30: 179 r31:  59 
x  :  19 y  : 184 z  :  15 
Registers used: 25 out of 35 (71.4%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   3 
adiw  :  28 and   :   0 andi  :   8 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  19 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   1 brne  :  30 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  58 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  10 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  33 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  28 ld    :  25 ldd   :  81 ldi   :  96 
lds   :   3 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  20 movw  :  20 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  14 pop   :   2 push  :   2 rcall :  19 ret   :  28 
reti  :   0 rjmp  :  61 rol   :   0 ror   :   0 sbc   :   1 sbci  :   2 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  21 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  65 std   :  35 sts   :  10 sub   :   1 subi  :  16 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 53 out of 116 (45.7%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000762   1840     50   1890   32768   5.8%
[.dseg] 0x000100 0x000304      0      4      4    2048   0.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 3 warnings
